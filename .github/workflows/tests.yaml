name: Testing

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Configure poetry
        run: |
          python -m poetry config virtualenvs.in-project true
      - name: Install dependencies
        run: |
          poetry install --with test
      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name : Source into poetry
        run: source .venv/bin/activate
      - name: Show environment
        run: make show
      - name: Run tests
        run: |
          python -m pytest -v --cov-config .coveragerc --cov=darkconf -l --tb=short --maxfail=1 tests/
          python -m coverage xml
          python -m coverage html
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.python-version }}
          path: htmlcov
        if: ${{ always() }}
